{"openapi":"3.0.0","paths":{"/auth/register":{"post":{"operationId":"AuthController_userRegister","parameters":[],"requestBody":{"required":true,"content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserRegisterDto"}}}},"responses":{"200":{"description":"Successfully Registered","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"401":{"description":"Unauthorized"}},"tags":["auth"],"security":[{"apiKey":[]}]}},"/v1/auth/me":{"get":{"operationId":"AuthController_getCurrentUser","parameters":[],"responses":{"200":{"description":"current user info","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"401":{"description":"Unauthorized"}},"tags":["auth"],"security":[{"apiKey":[]}]}},"/users":{"get":{"operationId":"UserController_getUsers","parameters":[{"name":"order","required":false,"in":"query","schema":{"$ref":"#/components/schemas/Order"}},{"name":"page","required":false,"in":"query","int":true,"example":1,"schema":{"minimum":1,"default":1,"type":"number"}},{"name":"take","required":false,"in":"query","int":true,"example":1,"schema":{"minimum":1,"maximum":50,"default":10,"type":"number"}},{"name":"q","required":false,"in":"query","schema":{"type":"string"}}],"responses":{"200":{"description":"Get users list","content":{"application/json":{"schema":{"allOf":[{"$ref":"#/components/schemas/PageDto"},{"properties":{"results":{"type":"array","items":{"$ref":"#/components/schemas/PageDto"}}}}]}}}},"401":{"description":"Unauthorized"}},"tags":["users"],"security":[{"apiKey":[]}]}},"/users/{id}":{"get":{"operationId":"UserController_getUser","parameters":[{"name":"id","required":true,"in":"path","schema":{"type":"string"}}],"responses":{"200":{"description":"Get users list","content":{"application/json":{"schema":{"$ref":"#/components/schemas/UserDto"}}}},"401":{"description":"Unauthorized"}},"tags":["users"],"security":[{"apiKey":[]}]}},"/health":{"get":{"operationId":"HealthCheckerController_check","parameters":[],"responses":{"200":{"description":"The Health Check is successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"ok"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","properties":{"status":{"type":"string"}},"additionalProperties":{"type":"string"}},"nullable":true},"error":{"type":"object","example":{},"additionalProperties":{"type":"object","properties":{"status":{"type":"string"}},"additionalProperties":{"type":"string"}},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","properties":{"status":{"type":"string"}},"additionalProperties":{"type":"string"}}}}}}}},"503":{"description":"The Health Check is not successful","content":{"application/json":{"schema":{"type":"object","properties":{"status":{"type":"string","example":"error"},"info":{"type":"object","example":{"database":{"status":"up"}},"additionalProperties":{"type":"object","properties":{"status":{"type":"string"}},"additionalProperties":{"type":"string"}},"nullable":true},"error":{"type":"object","example":{"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","properties":{"status":{"type":"string"}},"additionalProperties":{"type":"string"}},"nullable":true},"details":{"type":"object","example":{"database":{"status":"up"},"redis":{"status":"down","message":"Could not connect"}},"additionalProperties":{"type":"object","properties":{"status":{"type":"string"}},"additionalProperties":{"type":"string"}}}}}}}}}}}},"info":{"title":"PTTB Shopee Service V1","description":"### REST\n\nRoutes is following REST standard (Richardson level 3)\n\n<details><summary>Detailed specification</summary>\n<p>\n\n**List:**\n  - `GET /<resources>/`\n    - Get the list of **<resources>** as admin\n  - `GET /user/<user_id>/<resources>/`\n    - Get the list of **<resources>** for a given **<user_id>**\n    - Output a **403** if logged user is not **<user_id>**\n\n**Detail:**\n  - `GET /<resources>/<resource_id>`\n    - Get the detail for **<resources>** of id **<resource_id>**\n    - Output a **404** if not found\n  - `GET /user/<user_id>/<resources>/<resource_id>`\n    - Get the list of **<resources>** for a given **user_id**\n    - Output a **404** if not found\n    - Output a **403** if:\n      - Logged user is not **<user_id>**\n      - The **<user_id>** have no access to **<resource_id>**\n\n**Creation / Edition / Replacement / Suppression:**\n  - `<METHOD>` is:\n    - **POST** for creation\n    - **PATCH** for update (one or more fields)\n    - **PUT** for replacement (all fields, not used)\n    - **DELETE** for suppression (all fields, not used)\n  - `<METHOD> /<resources>/<resource_id>`\n    - Create **<resources>** with id **<resource_id>** as admin\n    - Output a **400** if **<resource_id>** conflicts with existing **<resources>**\n  - `<METHOD> /user/<user_id>/<resources>/<resource_id>`\n    - Create **<resources>** with id **<resource_id>** as a given **user_id**\n    - Output a **409** if **<resource_id>** conflicts with existing **<resources>**\n    - Output a **403** if:\n      - Logged user is not **<user_id>**\n      - The **<user_id>** have no access to **<resource_id>**\n</p>\n</details>","version":"v1.0.0","contact":{}},"tags":[],"servers":[],"components":{"securitySchemes":{"apiKey":{"type":"apiKey","in":"header","name":"X-API-KEY"}},"schemas":{"UserRegisterDto":{"type":"object","properties":{"clientName":{"type":"string"}},"required":["clientName"]},"UserDto":{"type":"object","properties":{"id":{"type":"string"},"createdAt":{"format":"date-time","type":"string"},"updatedAt":{"format":"date-time","type":"string"},"clientName":{"type":"string"},"apiKey":{"type":"string"},"status":{"type":"string"}},"required":["id","createdAt","updatedAt","clientName","status"]},"PageMetaDto":{"type":"object","properties":{"page":{"type":"number"},"take":{"type":"number"},"itemCount":{"type":"number"},"pageCount":{"type":"number"},"hasPreviousPage":{"type":"boolean"},"hasNextPage":{"type":"boolean"}},"required":["page","take","itemCount","pageCount","hasPreviousPage","hasNextPage"]},"PageDto":{"type":"object","properties":{"data":{"type":"array","items":{"type":"array"}},"meta":{"$ref":"#/components/schemas/PageMetaDto"}},"required":["data","meta"]},"Order":{"type":"string","enum":["ASC","DESC"]}}}}